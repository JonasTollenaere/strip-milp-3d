//
// Created by Jonas Tollenaere on 04/07/2025.
//

#include <../datasets/StripPackingInstances.h>
#include "../include/MILPTask.h"


#define EXPORT_ONLY true // Set to true to only export the models without running the MILP solver

int main() {

    std::vector<std::string> jsonInstances {
        TOLLENAERE_2025_STOYAN_2005_02_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_03_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_04_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_05_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_06_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_07_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_08_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_09_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_10_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_11_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_12_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_13_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_14_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_15_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_16_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_17_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_18_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_19_ITEMS,
        TOLLENAERE_2025_STOYAN_2005_20_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_02_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_03_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_04_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_05_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_06_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_07_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_08_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_09_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_10_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_11_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_12_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_13_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_14_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_15_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_16_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_17_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_18_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_19_ITEMS,
        TOLLENAERE_2025_STOYAN_2004_20_ITEMS,
        TOLLENAERE_2025_DIAMONDS_02_ITEMS,
        TOLLENAERE_2025_DIAMONDS_03_ITEMS,
        TOLLENAERE_2025_DIAMONDS_04_ITEMS,
        TOLLENAERE_2025_DIAMONDS_05_ITEMS,
        TOLLENAERE_2025_DIAMONDS_06_ITEMS,
        TOLLENAERE_2025_DIAMONDS_07_ITEMS,
        TOLLENAERE_2025_DIAMONDS_08_ITEMS,
        TOLLENAERE_2025_DIAMONDS_09_ITEMS,
        TOLLENAERE_2025_DIAMONDS_10_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_02_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_03_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_04_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_05_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_06_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_07_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_08_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_09_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_10_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_11_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_12_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_13_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_14_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_15_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_16_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_17_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_18_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_19_ITEMS,
        TOLLENAERE_2025_TETRAHEDRONS_20_ITEMS,
    };

    // Iterate over all strategies
    for (const auto &instancePath: jsonInstances){
        MILPTask<false,false,false,DEFAULT,EXPORT_ONLY>(instancePath).run(); // Base model without symmetry breaking
        MILPTask<true,false,false,DEFAULT,EXPORT_ONLY>(instancePath).run(); // Base model
        MILPTask<false,true,false,DEFAULT,EXPORT_ONLY>(instancePath).run();  // Disjunct slices without symmetry breaking
        MILPTask<true,true,false,DEFAULT,EXPORT_ONLY>(instancePath).run();  // Disjunct slices
        MILPTask<true,true,true,DEFAULT,EXPORT_ONLY>(instancePath).run();   // Disjunct slices and lifting
        MILPTask<true,true,true,SORTED_LARGEST_ITEM_VOLUME,EXPORT_ONLY>(instancePath).run();
        MILPTask<true,true,true,SORTED_LARGEST_ITEM_AABB_VOLUME,EXPORT_ONLY>(instancePath).run();
        MILPTask<true,true,true,SORTED_LARGEST_ITEM_HEIGHT,EXPORT_ONLY>(instancePath).run();
        MILPTask<true,true,true,SORTED_LARGEST_ITEM_SURFACE_XY,EXPORT_ONLY>(instancePath).run();
        MILPTask<true,true,true,LARGEST_NFP_AABB_VOLUME,EXPORT_ONLY>(instancePath).run();
        MILPTask<true,true,true,LEAST_NFP_FACES,EXPORT_ONLY>(instancePath).run();
    }
}
